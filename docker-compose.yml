version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: ethereum-processor-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: mi_contraseña
      POSTGRES_DB: ethereum_events
      POSTGRES_INITDB_ARGS: "-E UTF8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./flyway/sql:/docker-entrypoint-initdb.d
    networks:
      - ethereum-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # ActiveMQ Message Queue
  activemq:
    image: apache/activemq-artemis:2.31-alpine
    container_name: ethereum-processor-queue
    environment:
      ARTEMIS_USERNAME: admin
      ARTEMIS_PASSWORD: admin
      ARTEMIS_MQ_USERNAME: guest
      ARTEMIS_MQ_PASSWORD: guest
    ports:
      - "61616:61616" # OpenWire protocol
      - "8161:8161"   # Web Console
    volumes:
      - activemq_data:/var/lib/artemis-instance
      - activemq_logs:/var/log/artemis
    networks:
      - ethereum-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8161/console || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  # Flyway for database migrations
  flyway:
    image: flyway/flyway:9-alpine
    container_name: ethereum-processor-flyway
    command: migrate
    environment:
      FLYWAY_URL: jdbc:postgresql://postgres:5432/ethereum_events
      FLYWAY_USER: postgres
      FLYWAY_PASSWORD: mi_contraseña
      FLYWAY_SCHEMAS: public
      FLYWAY_BASELINE_ON_MIGRATE: "true"
    volumes:
      - ./flyway/sql:/flyway/sql
      - ./flyway/flyway.conf:/flyway/conf/flyway.conf
    networks:
      - ethereum-network
    depends_on:
      postgres:
        condition: service_healthy

networks:
  ethereum-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  activemq_data:
    driver: local
  activemq_logs:
    driver: local
