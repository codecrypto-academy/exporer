version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: ethereum-processor-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: mi_contraseña
      POSTGRES_DB: ethereum_events
      POSTGRES_INITDB_ARGS: "-E UTF8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./flyway/sql:/docker-entrypoint-initdb.d
    networks:
      - ethereum-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # RabbitMQ Message Queue
  rabbitmq:
    image: rabbitmq:3.12-management-alpine
    container_name: ethereum-processor-queue
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
      RABBITMQ_DEFAULT_VHOST: /
    ports:
      - "5672:5672"   # AMQP protocol
      - "15672:15672" # Management UI
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - rabbitmq_logs:/var/log/rabbitmq
    networks:
      - ethereum-network
    healthcheck:
      test: ["CMD-SHELL", "rabbitmq-diagnostics -q ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  # Flyway for database migrations
  flyway:
    image: flyway/flyway:9-alpine
    container_name: ethereum-processor-flyway
    command: migrate
    environment:
      FLYWAY_URL: jdbc:postgresql://postgres:5432/ethereum_events
      FLYWAY_USER: postgres
      FLYWAY_PASSWORD: mi_contraseña
      FLYWAY_SCHEMAS: public
      FLYWAY_BASELINE_ON_MIGRATE: "true"
    volumes:
      - ./flyway/sql:/flyway/sql
      - ./flyway/flyway.conf:/flyway/conf/flyway.conf
    networks:
      - ethereum-network
    depends_on:
      postgres:
        condition: service_healthy

networks:
  ethereum-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  rabbitmq_data:
    driver: local
  rabbitmq_logs:
    driver: local
